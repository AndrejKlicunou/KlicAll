dat=read.table("f.txt")
dat=read.table("zad3.txt")
dat
plot(dat,type="p",main="Корреляционное поле",xlab="X", ylab="Y")
otkl<-sd(dat[,1])
otkl
var(dat[,1])
t<- rep(0,3*4)
dim(t)<- c(3,4)
t
sp<-mean(dat[,1])
t[1,1]<-paste('(',as.character(sp-otkl),',',as.character(sp+otkl),')')
t[2,1]<-paste('(',as.character(sp-2*otkl),',',as.character(sp+2*otkl),')')
t[3,1]<-paste('(',as.character(sp-3*otkl),',',as.character(sp+3*otkl),')')
t
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp-otkl) t[1,2]<-t[1,2]+1}}
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp-otkl)) t[1,2]<-t[1,2]+1}}
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp+otkl) t[1,2]<-t[1,2]+1}}
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp+otkl)) t[1,2]<-t[1,2]+1}}
count<-0
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp+otkl)) count<-count+1}}
t[2,1]<-count
count<-0
t[2,1]<-paste('(',as.character(sp-2*otkl),',',as.character(sp+2*otkl),')')
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp+otkl)) count<-count+1}}
t[1,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>(sp-2*otkl)){if(dat[i,1]<(sp+2*otkl)) count<-count+1}}
t[2,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>(sp-3*otkl)){if(dat[i,1]<(sp+3*otkl)) count<-count+1}}
t[3,2]<-count
t
t[1,3]<-t[1,2]/20*100
count<-t[1,2]
t[1,3]<-count*100/20
t[1,3]<-s.numeric(count)*100/20
t[1,3]<-as.numeric(t[1,2])*100/20
t[2,3]<-as.numeric(t[2,2])*100/20
t[3,3]<-as.numeric(t[3,2])*100/20
t
t[1,4]<-68,3
t[1,4]<-68.3
t[2,4]<-95.4
t[3,4]<-99.7
t
tt<-rep(0,3*4)
dim(tt)<- c(3,4)
tt
gr<-1+as.integer(1.332*log(20))
step<-(dat[20,1]-dat[1,1])/gr
step
tt<-rep(0,4*4)
dim(tt)<- c(4,4)
t
tt
tt[1,1]<-paste('(',as.character(dat[1,1]),',',as.character(dat[1,1]+step),')')
tt[1,1]<-paste('(',as.character(dat[1,1]+step),',',as.character(dat[1,1]+2*step),')')
tt[2,1]<-paste('(',as.character(dat[1,1]+step),',',as.character(dat[1,1]+2*step),')')
tt[1,1]<-paste('(',as.character(dat[1,1]),',',as.character(dat[1,1]+step),')')
tt[1,1]<-paste('(',as.character(dat[1,1]+2*step),',',as.character(dat[1,1]+3*step),')')
tt[1,1]<-paste('(',as.character(dat[1,1]),',',as.character(dat[1,1]+step),')')
tt[3,1]<-paste('(',as.character(dat[1,1]+2*step),',',as.character(dat[1,1]+3*step),')')
tt[3,1]<-paste('(',as.character(dat[1,1]+3*step),',',as.character(dat[1,1]+4*step),')')
tt
tt[4,1]<-paste('(',as.character(dat[1,1]+3*step),',',as.character(dat[1,1]+4*step),')')
tt[3,1]<-paste('(',as.character(dat[1,1]+2*step),',',as.character(dat[1,1]+3*step),')')
tt
count<-0
for (i in 1:20) {if(dat[i,1]>=(dat[1,1])){if(dat[i,1]<(dat[1,1]+step)) count<-count+1}}
t[1,2]<-count
for (i in 1:20) {if(dat[i,1]>=(dat[1,1]+step)){if(dat[i,1]<(dat[1,1]+2*step)) count<-count+1}}
count<-count-as.numeric(tt[1,2])
count<-0
for (i in 1:20) {if(dat[i,1]>=(dat[1,1]+step)){if(dat[i,1]<(dat[1,1]+2*step)) count<-count+1}}
tt[2,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>=(dat[1,1]+2*step)){if(dat[i,1]<(dat[1,1]+3*step)) count<-count+1}}
tt[3,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>=(dat[1,1]+3*step)){if(dat[i,1]<=(dat[1,1]+4*step)) count<-count+1}}
tt[4,2]<-count
tt
count<-0
for (i in 1:20) {if(dat[i,1]>=(dat[1,1])){if(dat[i,1]<(dat[1,1]+step)) count<-count+1}}
t[1,2]<-count
t<-0
t
t<- rep(0,3*4)
t,-0
T<-0
t<- rep(0,3*4)
dim(t)<- c(3,4)
sp<-mean(dat[,1])
t[1,1]<-paste('(',as.character(sp-otkl),',',as.character(sp+otkl),')')
t[2,1]<-paste('(',as.character(sp-2*otkl),',',as.character(sp+2*otkl),')')
t[3,1]<-paste('(',as.character(sp-3*otkl),',',as.character(sp+3*otkl),')')
count<-0
for (i in 1:20) {if(dat[i,1]>(sp-otkl)){if(dat[i,1]<(sp+otkl)) count<-count+1}}
t[1,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>(sp-2*otkl)){if(dat[i,1]<(sp+2*otkl)) count<-count+1}}
t[2,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>(sp-3*otkl)){if(dat[i,1]<(sp+3*otkl)) count<-count+1}}
t[3,2]<-count
t[1,3]<-as.numeric(t[1,2])*100/20
t[2,3]<-as.numeric(t[2,2])*100/20
t[3,3]<-as.numeric(t[3,2])*100/20
t[1,4]<-68.3
t[2,4]<-95.4
t[3,4]<-99.7
t
tt
count<-0
for (i in 1:20) {if(dat[i,1]>=(dat[1,1])){if(dat[i,1]<(dat[1,1]+step)) count<-count+1}}
tt[1,2]<-count
tt
x<-dat[,1]
x
y<-sum(x[1,9])
y<-sum(x[1:8]
)
y
tt[1,3]<-y
y<-sum(x[9:13])
y
tt[2,3]<-y
y<-sum(x[14:17])
tt[3,3]<-y
y<-sum(x[18:20])
tt[4,3]<-y
tt
tt[1,4]<-mean(sum(x[1:8]))
tt
tt[1,4]<-mean(x[1:8])
tt
tt[2,4]<-mean(x[9:13])
tt[3,4]<-mean(x[14:17])
tt[4,4]<-mean(x[18:20])
tt
koef_kor<-cor(dat[,1],dat[,2])
alph<-0.01
v<-18
mod_kor<-sqrt(koef_kor*koef_kor)
znach<-mod_kor*sqrt(18/(1-koef_kor*koef_kor))
znach
otkl_y<-sd(dat[,2])
otkl_y
b<-korf_kor*otkl_y/otkl
b<-koef_kor*otkl_y/otkl
b
x_sr<-mean(dat[,1])
y_sr<-mean(dat[,2])
a<-y_sr-b*x_sr
a
lines(dat[,1], a+b*dat[,1])
save.image("E:/NaFaNyA_files/ВКИАД (Введение в компьютерный и интеллектуальный анализ данных)/labs/zad3/zad3.RData")
save.image("E:/NaFaNyA_files/ВКИАД (Введение в компьютерный и интеллектуальный анализ данных)/labs/zad3/zad3.RData")
var(dat[,1])
t
gr<-1+as.integer(1.332*log(20))
пк
gr
gr<1+as.integer(3.332*log(20))
gr
gr<-as.integer(3.332*log(20))
gr
gr<-as.integer(1.332*log(20))
gr
gr
gr <- 1+ floor (log(20,2))
gr
tt<-rep(0, rg*4)
tt<-rep(0, gr*4)
dim(tt)<-c(gr*4)
tt
tt
dim(tt)<-c(gr*4)
tt
dim(tt)<-c(5,4)
tt
max<-max(dat[,1])
max
min<-min(dat[,1])
min
step<-(max-min)/gr
step
tt[1,1]<-paste('(',as.character(min),',',as.character(min+step),')')
tt[2,1]<-paste('(',as.character(min+step),',',as.character(min+2*step),')')
tt[3,1]<-paste('(',as.character(min+2*step),',',as.character(min+3*step),')')
tt[4,1]<-paste('(',as.character(min+3*step),',',as.character(min+4*step),')')
tt[5,1]<-paste('(',as.character(min+4*step),',',as.character(min+5*step),')')
tt
count<-0
for (i in 1:20) {if(dat[i,1]>=(min)){if(dat[i,1]<(min+step)) count<-count+1}}
tt[1,2]<-count
tt
sorted<-sort(dat[,1])
sorted
count<-0
for (i in 1:20) {if(dat[i,1]>=(min+step)){if(dat[i,1]<(min+2*step)) count<-count+1}}
tt[2,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>=(min+2*step)){if(dat[i,1]<(min+3*step)) count<-count+1}}
tt[3,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>=(min+3*step)){if(dat[i,1]<(min+4*step)) count<-count+1}}
tt[4,2]<-count
count<-0
for (i in 1:20) {if(dat[i,1]>=(min+4*step)){if(dat[i,1]<=(min+5*step)) count<-count+1}}
tt[5,2]<-count
tt
tt[1,3]<-sum(sorted[1:8])
tt[2,3]<-sum(sorted[9:11])
tt[3,3]<-sum(sorted[12:14])
tt[4,3]<-sum(sorted[15:18])
tt[5,3]<-sum(sorted[19:20])
tt
tt[1,4]<-mean(sorted[1:8])
tt[2,4]<-mean(sorted[9:11])
tt[3,4]<-mean(sorted[12:14])
tt[4,4]<-mean(sorted[15:18])
tt[5,4]<-mean(sorted[19:20])
tt
е
t
tt
